
-- AD SOYAD : MELIKA JIBRIL SEID
-- OĞRENCİ NO: 23435004013
-- EMAIL: m3likaj@gmail.com


CREATE TABLE APARTMENT_COMPLEX(
    COMPLEX_ID INT NOT NULL AUTO_INCREMENT UNIQUE,
    COMPLEX_NAME VARCHAR(100) NOT NULL,
    NUM_OF_BLOCKS SMALLINT NOT NULL,
    ADDRESS VARCHAR(150) NOT NULL,
    PRIMARY KEY (COMPLEX_ID)
);

CREATE TABLE BLOCK(
    BLOCK_ID INT NOT NULL AUTO_INCREMENT UNIQUE,
    BLOCK_NO SMALLINT NOT NULL,
    NUM_OF_FLOORS SMALLINT NOT NULL,
    COMPLEX_ID INT NOT NULL,
    PRIMARY KEY(BLOCK_ID),
    FOREIGN KEY (COMPLEX_ID) REFERENCES APARTMENT_COMPLEX(COMPLEX_ID) ON UPDATE CASCADE
);

CREATE TABLE EMPLOYEE(
    EMP_ID INT NOT NULL,
    COMPLEX_ID INT NOT NULL,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    TEL_NO VARCHAR(15) NOT NULL,
    POSITION VARCHAR(50) NOT NULL,
    EDU_LEVEL VARCHAR(15) NOT NULL,
    SALARY INT NOT NULL,
    PRIMARY KEY(EMP_ID),
    FOREIGN KEY (COMPLEX_ID) REFERENCES APARTMENT_COMPLEX(COMPLEX_ID) ON UPDATE CASCADE
);

CREATE TABLE OWNER(
    OWNER_ID INT NOT NULL UNIQUE,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    TEL_NO VARCHAR(15) NOT NULL,
    PRIMARY KEY(OWNER_ID)
);

--BU KISIMDAN SONRAKİ TABLOLARDA 1 NUMARALI OWNER DEFAULT OLARAK GİRİLECEĞİ İÇİN
-- İNSERT KULLANMAK DURUMUNDA KALDIM
INSERT INTO
    OWNER(OWNER_ID, FIRST_NAME, LAST_NAME, EMAIL, TEL_NO)
VALUES
(
        1,
        'YEHULACHEN',
        'REALESTATE',
        'yehulachenrelaestate@gmail.com',
        '0911641942'
    );

CREATE TABLE HOUSE(
    OWNER_ID INT DEFAULT 1 NOT NULL,
    BLOCK_ID INT NOT NULL,
    HOUSE_ID INT NOT NULL UNIQUE,
    HOUSE_NO SMALLINT NOT NULL,
    LISTING_TYPE CHAR(1) NOT NULL,
    NUM_OF_BEDROOM VARCHAR(3) NOT NULL,
    FLOOR_NO SMALLINT NOT NULL,
    IS_FURNISHED BOOLEAN NOT NULL,
    IS_AVAILABLE BOOLEAN NOT NULL,
    PRIMARY KEY(HOUSE_ID, BLOCK_ID, OWNER_ID),
    FOREIGN KEY(BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON UPDATE CASCADE,
    FOREIGN KEY(OWNER_ID) REFERENCES OWNER(OWNER_ID) ON UPDATE CASCADE
);

CREATE TABLE TENANT(
    TENANT_ID INT NOT NULL UNIQUE,
    HOUSE_ID INT NOT NULL,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    TEL_NO VARCHAR(15) NOT NULL,
    PRIMARY KEY(TENANT_ID, HOUSE_ID),
    FOREIGN KEY(HOUSE_ID) REFERENCES HOUSE(HOUSE_ID) ON UPDATE CASCADE
);

CREATE TABLE CONTRACT(
    TENANT_ID INT NOT NULL,
    CONTRACT_NO BIGINT NOT NULL UNIQUE,
    OWNER_ID INT DEFAULT 1 NOT NULL,
    HOUSE_ID INT NOT NULL,
    CONTRACT_TYPE CHAR(1) NOT NULL,
    ADVANCE_DEPOSIT INT NOT NULL,
    PAYMENT_SCHEME VARCHAR(10) NOT NULL,
    DEPOSIT INT NOT NULL,
    START_DATE DATE NOT NULL,
    FINISH_DATE DATE NOT NULL,
    LATE_FEE INT NOT NULL,
    TOTAL_AMOUNT INT NOT NULL,
    PRIMARY KEY(CONTRACT_NO, TENANT_ID),
    FOREIGN KEY(TENANT_ID) REFERENCES TENANT(TENANT_ID) ON UPDATE CASCADE,
    FOREIGN KEY(HOUSE_ID) REFERENCES TENANT(HOUSE_ID) ON UPDATE CASCADE,
    FOREIGN KEY(OWNER_ID) REFERENCES HOUSE(OWNER_ID) ON UPDATE CASCADE
);

CREATE TABLE HOUSE_PAYMENTS(
    CONTRACT_NO BIGINT NOT NULL,
    BILL_NO BIGINT NOT NULL UNIQUE,
    TENANT_ID INT NOT NULL,
    OWNER_ID INT DEFAULT 1 NOT NULL,
    PAYMENT_TYPE CHAR(1) NOT NULL,
    ISSUANCE_DATE DATE NOT NULL,
    AMOUNT INT NOT NULL,
    DEADLINE DATE NOT NULL,
    LATE_FEE INT NOT NULL,
    IS_PAID BOOLEAN DEFAULT 0 NOT NULL,
    PRIMARY KEY(BILL_NO, CONTRACT_NO),
    FOREIGN KEY(CONTRACT_NO) REFERENCES CONTRACT(CONTRACT_NO) ON UPDATE CASCADE,
    FOREIGN KEY(TENANT_ID) REFERENCES TENANT(TENANT_ID) ON UPDATE CASCADE,
    FOREIGN KEY(OWNER_ID) REFERENCES HOUSE(OWNER_ID) ON UPDATE CASCADE
);

CREATE TABLE RECIEPT(
    BILL_NO BIGINT NOT NULL,
    TENANT_ID INT NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    PAID_AMOUNT INT NOT NULL,
    LATE_FEE INT NOT NULL,
    PRIMARY KEY(BILL_NO, TENANT_ID),
    FOREIGN KEY(BILL_NO) REFERENCES HOUSE_PAYMENTS(BILL_NO) ON UPDATE CASCADE,
    FOREIGN KEY(TENANT_ID) REFERENCES HOUSE_PAYMENTS(TENANT_ID) ON UPDATE CASCADE
);

CREATE TABLE UTILITIES (
    UTILITY_NAME VARCHAR(20) NOT NULL UNIQUE,
    PAYMENT_SCHEME VARCHAR(10) NOT NULL,
    PRIMARY KEY(UTILITY_NAME)
);

CREATE TABLE UTILITY_BILL(
    TENANT_ID INT NOT NULL,
    BILL_NO BIGINT NOT NULL UNIQUE,
    BILL_DATE DATE NOT NULL,
    HOUSE_ID INT NOT NULL,
    UTILITY_NAME VARCHAR(30) NOT NULL,
    BILL_AMOUNT DECIMAL(5, 2) NOT NULL,
    BILL_DEADLINE DATE NOT NULL,
    LATE_FEE INT NOT NULL,
    PRIMARY KEY(BILL_NO, TENANT_ID),
    FOREIGN KEY(TENANT_ID) REFERENCES TENANT(TENANT_ID) ON UPDATE CASCADE,
    FOREIGN KEY(HOUSE_ID) REFERENCES TENANT(HOUSE_ID) ON UPDATE CASCADE,
    FOREIGN KEY(UTILITY_NAME) REFERENCES UTILITIES(UTILITY_NAME) ON UPDATE CASCADE
);

CREATE TABLE FACILITIES(
    FACILITY_ID INT NOT NULL UNIQUE,
    BLOCK_ID INT NOT NULL,
    FACILITY_NAME VARCHAR(20) NOT NULL,
    FACILITY_STATUS VARCHAR(10) NOT NULL,
    LAST_UPDATE DATE NOT NULL,
    PRIMARY KEY(FACILITY_ID, BLOCK_ID),
    FOREIGN KEY(BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON UPDATE CASCADE
);

CREATE TABLE INSPECTION(
    FACILITY_ID INT NOT NULL UNIQUE,
    INS_ID INT NOT NULL,
    EMP_ID INT NOT NULL,
    INS_DATE DATE NOT NULL,
    INS_TIME TIME NOT NULL,
    FACILITY_STATUS VARCHAR(10) NOT NULL,
    NOTES VARCHAR(200) NOT NULL,
    PRIMARY KEY(INS_ID, FACILITY_ID),
    FOREIGN KEY(FACILITY_ID) REFERENCES FACILITIES(FACILITY_ID) ON UPDATE CASCADE,
    FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID) ON UPDATE CASCADE
);

CREATE TABLE CAMERA(
    CAM_ID BIGINT NOT NULL UNIQUE,
    BLOCK_ID INT NOT NULL,
    FLOOR_NO SMALLINT NOT NULL,
    FEED_LINK VARCHAR(300) NOT NULL,
    STATUS VARCHAR(20) NOT NULL,
    PRIMARY KEY(CAM_ID, BLOCK_ID),
    FOREIGN KEY(BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON UPDATE CASCADE
);

CREATE TABLE PARKING_SLOT(
    SLOT_ID INT NOT NULL UNIQUE,
    HOUSE_ID INT NOT NULL,
    IS_AVAILABLE BOOLEAN DEFAULT 1 NOT NULL,
    PRIMARY KEY(SLOT_ID),
    FOREIGN KEY(HOUSE_ID) REFERENCES HOUSE(HOUSE_ID) ON UPDATE CASCADE
);

CREATE TABLE COMMON_AREA(
    CA_NAME VARCHAR(20) NOT NULL,
    BLOCK_ID INT NOT NULL,
    IS_AVAILABLE BOOLEAN NOT NULL,
    PRIMARY KEY(CA_NAME, BLOCK_ID),
    FOREIGN KEY(BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON UPDATE CASCADE
);

CREATE TABLE MANAGEMENT_COMMITEE(
    BLOCK_ID INT NOT NULL UNIQUE,
    MANAGER_ID INT NOT NULL UNIQUE,
    NUM_OF_MEMBERS SMALLINT NOT NULL,
    PRIMARY KEY(BLOCK_ID),
    FOREIGN KEY(BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE COMMITTEE_MEMBER(
    MEMBER_ID INT NOT NULL UNIQUE,
    BLOCK_ID INT NOT NULL,
    HOUSE_ID INT NOT NULL,
    ROLE VARCHAR(20) NOT NULL,
    WAS_MEMBER BOOLEAN NOT NULL,
    PRIMARY KEY(MEMBER_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES TENANT(TENANT_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(BLOCK_ID) REFERENCES HOUSE(BLOCK_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(HOUSE_ID) REFERENCES TENANT(HOUSE_ID) ON UPDATE CASCADE
);

CREATE TABLE BOOKING(
    BOOKING_ID INT NOT NULL UNIQUE,
    TENANT_ID INT NOT NULL,
    CA_NAME VARCHAR(20) NOT NULL,
    HOUSE_ID INT NOT NULL,
    REASON VARCHAR(50) NOT NULL,
    START_TIME TIME NOT NULL,
    END_TIME TIME NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    PRIMARY KEY(BOOKING_ID, TENANT_ID),
    FOREIGN KEY (TENANT_ID) REFERENCES TENANT(TENANT_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(HOUSE_ID) REFERENCES TENANT(HOUSE_ID) ON UPDATE CASCADE,
    FOREIGN KEY(CA_NAME) REFERENCES COMMON_AREA (CA_NAME) ON UPDATE CASCADE
);

CREATE TABLE BOOKING_STATUS(
    BOOKING_ID INT NOT NULL UNIQUE,
    MEMBER_ID INT NOT NULL,
    BOOKING_STATUS VARCHAR(10) NOT NULL,
    UPDATE_DATE DATE NOT NULL,
    PRIMARY KEY(BOOKING_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES COMMITTEE_MEMBER(MEMBER_ID) ON UPDATE CASCADE,
    FOREIGN KEY (BOOKING_ID) REFERENCES BOOKING(BOOKING_ID) ON UPDATE CASCADE ON DELETE CASCADE
);